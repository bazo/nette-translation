<?php

namespace Bazo\Translation;

use Bazo\Translation\Extraction\Context;
use Nette\Utils\Neon;



/**
 * Gettext
 *
 * @author martin.bazik
 */
class Builder
{

	private $metadata;



	public function addMetadata($key, $value)
	{
		$this->metadata[$key] = $value;
		return $this;
	}


	public function buildTemplate($file, $data)
	{
		$data = $this->formatTemplateData($data);
		file_put_contents($file, $this->dump($data));
	}


	public function build($file, $lang, $data)
	{
		$data = $this->formatLanguageFileData($lang, $data, $this->metadata);
		file_put_contents($file, $this->dump($data));
	}


	public function formatLanguageFileData($lang, $data, $metadata)
	{
		$pluralCount = $this->metadata['plural-count'];

		foreach ($data['messages'] as $index => $message) {
			if (isset($message['plural'])) {
				$translations = [];

				for ($i = 0; $i < $pluralCount; $i++) {
					$translations[$i] = '';
				}
				$message['translations'] = $translations;
				$data['messages'][$index] = $message;
			}
		}

		$struct = array(
			'lang' => $lang,
			'metadata' => $metadata,
			'messages' => $data['messages']
		);

		return $struct;
	}


	public function formatTemplateData($data)
	{
		$messages = [];

		foreach ($data as $entry) {
			$id = $entry[Context::SINGULAR];
			if (strlen($id) < 2) {
				continue;
			}

			$message = [];

			if (isset($entry[Context::CONTEXT])) {
				$message['context'] = $entry[Context::CONTEXT];
			}

			$message['singular'] = $id;
			if (isset($entry[Context::PLURAL])) {
				$message['plural'] = $entry[Context::PLURAL];
			}

			foreach ($entry['files'] as $fileReference) {
				$message['files'][] = $fileReference;
			}

			$message['translations'] = [""];

			$messages[$id] = $message;
		}

		ksort($messages);

		$struct = array(
			'messages' => $messages
		);

		return $struct;
	}


	public function dump(array $data, $comment = "# generated by Translation Builder\n\n")
	{
		return $comment . Neon::encode($data, Neon::BLOCK);
	}


}
